import { RegexBuilderBase } from "./regex_builder_base";
export declare class RegexAssertionBuilder extends RegexBuilderBase {
    /** Adds a word boundary to the regex. */
    boundary(): this;
    /** Adds a word boundary to the regex. */
    negatedBoundary(): this;
    /** Adds the provided content to the regex within word boundaries `\bcontent\b` */
    bordered(content: string): this;
    /** Adds a caret character, or start-of-the-line assertion, to the regex. */
    lineStart(): this;
    /** Adds a dollar character, or end-of-the-line assertion, to the regex. */
    lineEnd(): this;
    /** Combines RegexBuilder methods `lineStart()` and `add()`. */
    startsWith(start: string | RegExp): this;
    /** Combines RegexBuilder methods add(...) and lineEnd(). */
    endsWith(end: string): this;
    /** Adds a lookahead assertion to the regex. */
    lookahead(la: string | RegExp): this;
    /** Adds a lookbehind assertion  to the regex. */
    lookbehind(lb: string | RegExp): this;
    /** Adds a negated lookahead assertion  to the regex. */
    negatedLA(nla: string | RegExp): this;
    /** Adds a negated lookbehind assertion to the regex. */
    negatedLB(nlb: string | RegExp): this;
    /** Alias for `lookahead()`. */
    followedBy(la: string | RegExp): this;
    /** Alias for `negatedLA()`. */
    notFollowedBy(nla: string | RegExp): this;
    /** Alias for `lookbehind()`. */
    precededBy(lb: string | RegExp): this;
    /** Alias for `negatedLB()`. */
    notPrecededBy(nlb: string | RegExp): this;
}
