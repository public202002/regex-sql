import { RegexBuilderBase } from "./regex_builder_base";
export declare class RegexQuantifierBuilder extends RegexBuilderBase {
    /** Adds an N quantifier {n}. */
    times(n: number): this;
    /** Adds an N to M range quantifier {n,m}. */
    between(n: number, m: number): this;
    /** Adds an N or more quantifier {n,}. */
    atleast(n: number): this;
    /** Adds a one or more quantifier `+`. */
    onePlus(): this;
    /** Adds a zero or more quantifier `*`. */
    zeroPlus(): this;
    /** Adds a zero or one quantifier `?`. */
    oneZero(): this;
    /**
     * Makes the previous quantifier lazy, meaning it will stop on the first match it finds in a string.
     *
     * Example: In the string `'barbarbar'` the regex `(bar)+` will match `'barbarbar'` but` (bar)+? `will match `'bar'`
     */
    lazy(): this;
    private checkModifier;
    private checkDouble;
    private getPreviousToken;
}
