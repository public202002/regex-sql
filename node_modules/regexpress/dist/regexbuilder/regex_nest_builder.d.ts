import { RegexBuilderBase } from "./regex_builder_base";
import { groupCode } from "./process_group_code";
export declare class RegexNestBuilder extends RegexBuilderBase {
    /** Starts the addition of a nested tier to the regex. */
    nest(): this;
    /** Finishes a nested tier in the regex. An integer can be passed to complete multiple tiers at once or an asterisk to finish all remaining nests. */
    unnest(n?: undefined | number | '*'): this;
    /** Combines methods `nest()` and `add()`. */
    nestAdd(part: string | RegExp, type?: groupCode): this;
    /** Combines methods `nest()` and `noncapture()`. */
    nestNonCapture(): this;
    /** Combines methods `nest()` and `lookahead()`. */
    nestLookahead(): this;
    /** Combines methods `nest()` and `lookbehind()`. */
    nestLookbehind(): this;
    /** Combines methods `nest()` and `negatedLA()`. */
    nestNegatedLA(): this;
    /** Combines methods `nest()` and `negatedLB ()`. */
    nestNegatedLB(): this;
    /** Combines methods `nest()` and `namedGroup()`. */
    nestNamed(name: string, content: string | RegExp): this;
    private changeNestState;
}
