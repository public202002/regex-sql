import { RegexBuilderBase } from "./regex_builder_base";
export declare const charClasses: {
    digit: string;
    nonDigit: string;
    word: string;
    nonWord: string;
    whitespace: string;
    nonWhitespace: string;
    tab: string;
    carrReturn: string;
    linefeed: string;
    formfeed: string;
    backspace: string;
    nul: string;
    controlChar: string;
    hex: string;
    unicode: string;
};
export declare class RegexCharacterClassBuilder extends RegexBuilderBase {
    /** Adds `\d` to the regex. */
    digit(): this;
    /** Adds `\d` with a quantifier. */
    digits(n?: number, m?: number | '*'): this;
    /** Adds `\D` to the regex. */
    nonDigit(): this;
    /** Adds `\D` with a quantifier. */
    nonDigits(n?: number, m?: number | '*'): this;
    /** Adds `\w`. */
    word(): this;
    /** Adds `\w` with a quantifier. */
    words(n?: number, m?: number | '*'): this;
    /** Adds `\W`. */
    nonWord(): this;
    /** Adds `\W` with a quantifier. */
    nonWords(n?: number, m?: number | '*'): this;
    /** Adds `.` */
    any(): this;
    /** Adds `\s` */
    whitespace(): this;
    /** Adds `\s` with a quantifier. */
    whitespaces(n?: number, m?: number | '*'): this;
    /** Adds `\S` */
    nonWhitespace(): this;
    /** Adds `\S` with a quantifier. */
    nonWhitespaces(n?: number, m?: number | '*'): this;
    /** Adds `\t`. */
    tab(): this;
    /** Adds `\r`. */
    carriageReturn(): this;
    /** Alias for carrReturn() */
    cr(): this;
    /** Adds `\n`. */
    linefeed(): this;
    /** Alias for `linefeed()` */
    lf(): this;
    /** Adds `\f`. */
    formfeed(): this;
    /** Adds `[\b]`. */
    backspace(): this;
    /** Adds `\0`. */
    nul(): this;
    /** Adds `\cx`. */
    ctrlChar(x: string): this;
    /** Adds `\xhh`. */
    hex(hh: string): this;
    /** Adds `\uhhhh`. */
    utf16(hhhh: string): this;
    /** Adds `\u{hhhh}` or `\u{hhhhh}`. */
    unicodeChar(hhhh: string): this;
    private handleCharClass;
}
